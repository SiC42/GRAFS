<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>grafs-benchmark</artifactId>
  <groupId>edu.leipzig</groupId>
  <version>0.1</version>

  <build>
    <pluginManagement>
      <plugins>

        <!-- This improves the out-of-the-box experience in Eclipse by resolving some warnings. -->
        <plugin>
          <artifactId>lifecycle-mapping</artifactId>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <action>
                    <ignore/>
                  </action>
                  <pluginExecutionFilter>
                    <artifactId>maven-shade-plugin</artifactId>
                    <goals>
                      <goal>shade</goal>
                    </goals>
                    <groupId>org.apache.maven.plugins</groupId>
                    <versionRange>[3.1.1,)</versionRange>
                  </pluginExecutionFilter>
                </pluginExecution>
                <pluginExecution>
                  <action>
                    <ignore/>
                  </action>
                  <pluginExecutionFilter>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <goals>
                      <goal>testCompile</goal>
                      <goal>compile</goal>
                    </goals>
                    <groupId>org.apache.maven.plugins</groupId>
                    <versionRange>[3.1,)</versionRange>
                  </pluginExecutionFilter>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
          <groupId>org.eclipse.m2e</groupId>
          <version>1.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>

      <!-- Java Compiler -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.8.1</version>
      </plugin>

      <!-- We use the maven-shade plugin to create a fat jar that contains all necessary dependencies. -->
      <!-- Change the value of <mainClass>...</mainClass> if your program entry point changes. -->
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <!-- Run shade goal on package phase -->
          <execution>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <artifactSet>
                <excludes>
                  <exclude>org.apache.flink:force-shading</exclude>
                  <exclude>com.google.code.findbugs:jsr305</exclude>
                  <exclude>org.slf4j:*</exclude>
                  <exclude>org.apache.logging.log4j:*</exclude>
                </excludes>
              </artifactSet>
              <filters>
                <filter>
                  <!-- Do not copy the signatures in the META-INF folder.
                  Otherwise, this might cause SecurityExceptions when using the JAR. -->
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                </transformer>
              </transformers>
            </configuration>
            <goals>
              <goal>shade</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.2.4</version>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- Apache Flink dependencies -->
    <!-- These dependencies are provided, because they should not be packaged into the JAR file. -->
    <dependency>
      <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
      <groupId>org.apache.flink</groupId>
      <scope>provided</scope>
      <version>${flink.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>2.6.0</version>
    </dependency>
    <!-- Add logging framework, to produce console output when running in the IDE. -->
    <!-- These dependencies are excluded from the application JAR by default. -->
    <dependency>
      <artifactId>log4j-slf4j-impl</artifactId>
      <groupId>org.apache.logging.log4j</groupId>
      <scope>runtime</scope>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <artifactId>log4j-api</artifactId>
      <groupId>org.apache.logging.log4j</groupId>
      <scope>runtime</scope>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <artifactId>log4j-core</artifactId>
      <groupId>org.apache.logging.log4j</groupId>
      <scope>runtime</scope>
      <version>${log4j.version}</version>
    </dependency>


    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.13.4.1</version>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>edu.leipzig</groupId>
      <artifactId>grafs</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>edu.leipzig</groupId>
      <artifactId>grafs-data-setup</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.4</version>
    </dependency>

    <!-- test libraries -->
    <!-- Add test libraries -->
    <dependency>
      <artifactId>flink-test-utils_${scala.binary.version}</artifactId>
      <groupId>org.apache.flink</groupId>
      <scope>test</scope>
      <version>${flink.version}</version>
    </dependency>
    <dependency>
      <artifactId>flink-runtime_${scala.binary.version}</artifactId>
      <classifier>tests</classifier>
      <groupId>org.apache.flink</groupId>
      <scope>test</scope>
      <version>${flink.version}</version>
    </dependency>
    <dependency>
      <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
      <classifier>tests</classifier>
      <groupId>org.apache.flink</groupId>
      <scope>test</scope>
      <version>${flink.version}</version>
    </dependency>
    <dependency>
      <artifactId>junit-jupiter-api</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>5.7.0</version>
    </dependency>
    <dependency>
      <artifactId>java-hamcrest</artifactId>
      <groupId>org.hamcrest</groupId>
      <scope>test</scope>
      <version>2.0.0.0</version>
    </dependency>
  </dependencies>


  <properties>
    <flink.version>1.12.1</flink.version>
    <java.version>11</java.version>
    <log4j.version>2.13.3</log4j.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <metrics.version>4.1.2</metrics.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <scala.binary.version>2.11</scala.binary.version>
  </properties>

</project>